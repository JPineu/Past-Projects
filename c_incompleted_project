#include <Arduino.h>

#include <time.h>

#include "HardwareCfg.h"
#include "StMWork.h"
#include "GlobalVars.h"

#include <I2Cdev.h>
#include <MPU6050.h>

#include <Adafruit_ADS1X15.h>
#include <max6675.h>

int16_t imu_ax;
int16_t imu_ay;
int16_t imu_az;

int16_t imu_gx;
int16_t imu_gy;
int16_t imu_gz;

int16_t adc4,adc5,adc6      // Variáveis dos transdutores de Pressão
float P4,P5,P6
int level

float T4,T5,T6,T7,T8,mVL,mVG,hL,hG,h1,Vl,Vg,ml,mg,x //Variáveis Temperatura

void idle_state(void) { return; }

void toggle_led_high(void)
{
    digitalWrite(LED_PIN, HIGH);
}

void toggle_led(void)
{
    static int led_status = 0;
    led_status ^= 1;
    digitalWrite(LED_PIN, led_status);
}

void toggle_led_1000ms(void)
{
    static clock_t begin = 0, end = 0;
    static int led_status = 0;
    end = millis();
    
    int msec = (end - begin);
    if(msec > 1000)
    {
        begin = clock();
        //togle led
        led_status ^= 1;
        digitalWrite(LED_PIN, led_status);
    }
}

void toggle_led_500ms(void)
{
    static clock_t begin = 0, end = 0;
    static int led_status = 0;
    end = millis();
    
    int msec = (end - begin);
    if(msec > 500)
    {
        begin = clock();
        //togle led
        led_status ^= 1;
        digitalWrite(LED_PIN, led_status);
    }
}




void read_pressure4(void)
{
        adc4 = ads.readADC_SingleEnded(pinP4);
        P4 = adc4*0,003750057*50 //Kpa
    
    return;
}

void read_pressure5(void)
{   
      adc5 = ads.readADC_SingleEnded(pinP5);
      P5 = adc5*0,003750057*50 //Kpa
    
    return;
}

void read_pressure6(void)
{
      adc6 = ads.readADC_SingleEnded(pinP6);
      P6 = adc6*0,003750057*50 //Kpa
    
    return;
}

void MassaVolumica(void) {
  
    mVL = 4e-9 * T4*T4*T4*T4*T4 - 5e-6 * T4*T4*T4*T4 + 0.0083 * T4*T4*T4 + 0.9577 * T4*T4 - 168.817 * T4 + 6009918;
    mVG = 4e-9 * T5*T5*T5*T5*T5 - 5e-6 * T5*T5*T5*T5 - 0.9467 * T5*T5*T5 + 166.727 * T5*T5 - 155877 * T5 + 603845;

}

void alturafluido(void) {
  
  hL = (P1 - P2 - mVG * g * h_tanque) / ((mVL - mVG) * g);

  if (hL<h1) { //h1 valor conhecido distancia do transdutor de pressao ao fundo do tanque em metros
    Vl=((3,1416*Dt*Dt)/4)*hL // Dt- Diametro do tubo
    Vg = V_total - Vl // V_total = constante a determinar
    ml = mVL * Vl
    mg = mVG * Vg
    x = mg / (mg + ml)
  }
  if (hL>h1)
    VL=((3,1416*Dt*Dt)/4)*h1+((3,1416*Do*Do)/4)*(hL-h1) //Do - diametro do tanque oxidante // Dt- Diâmetro do tubo
                                                        //h1 - diferença de altura entre transdutor e fundo do tanque
    Vg = V_total - Vl
    ml = mVL * Vl
    mg = mVG * Vg
    x = mg / (mg + ml)
}
void temp_barato4(void)
{
    T6 = thermocouple4.readCelsius()+273,15
    //Dummy function
    return;
}

void temp_barato5(void)
{
    T7 = thermocouple5.readCelsius()+273,15
    //Dummy function
    return;
}

void temp_barato6(void)
{
    T8 = thermocouple6.readCelsius()+273,15
    //Dummy function
    return;
}

void CapacitiveLevel(void)
{
    
    if digitalRead(level1) = 1 {

        level=1

    }
    if (digitalRead(level1) = 1) && (digitalRead(level2)=1){

        level=2

    }
    if (digitalRead(level1) = 1) && (digitalRead(level2)=1)&& (digitalRead(level3)=1){

        level=3

    }
    if (digitalRead(level1) = 1) && (digitalRead(level2)=1) && (digitalRead(level3)=1) && (digitalRead(level4)=1){

        level=4
    }
     if (digitalRead(level1) = 1) && (digitalRead(level2)=1) && (digitalRead(level3)=1) && (digitalRead(level4)=1) && (digitalRead(level5)=1){

        level=5
    }
    return;
}
